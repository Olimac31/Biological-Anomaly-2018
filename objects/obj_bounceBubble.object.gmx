<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bubble1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_bubbleMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exploded = 0;
startX = x;
startY = y;
countdown = 120;
ogCD = 120;
floatDistance = 80;
ogFD = 80;
automatic = false;

hoverCD = 15;
hoverDir = 1;
ogHover = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var keyJump;
keyJump = keyboard_check_pressed(vk_up) || gamepad_button_check_pressed(4, gp_face1);

if(exploded == 1) //Explode
{
    if(countdown &gt; 0)
    {
        countdown--;
    }
    if(countdown &lt;= 0) //Total restart
    {
        countdown = ogCD;
        exploded = 0;
        image_alpha = 1;
        y = startY;
        floatDistance = ogFD;
        hoverCD = ogHover;
        hoverDir = 1;
    }
}
if(exploded == 0) //Normal function
{
    if(floatDistance &gt; 0)
    {
        y--;
        floatDistance--;
    }
    if(automatic &amp;&amp; floatDistance &lt;= 0)
    {
        floatDistance = ogFD;
        exploded = 1;
        instance_create(x-8, y, obj_pop); //Pop effect
        image_alpha = 0;
    }
    if(place_meeting(x, y-1, obj_Player) &amp;&amp; keyJump)//Player interaction
    {
        exploded = 1;
        instance_create(x-8, y, obj_pop); //Pop effect
        obj_Player.intVY = -7;
        obj_Player.bubbleJump = 15;
        audio_play_sound(snd_stomp, 0, 0);
        image_alpha = 0;
        floatDistance = ogFD;
    }
    if(floatDistance &lt;= 0)
    {
        scr_SmallHover();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
